---
title: Subset and Plot
---

::: {.callout-note title="Learning Objectives"}

1. How to crop a single data file
2. How to create a data cube with terra
3. How to crop a data cube to a box
:::

## Load packages

```{r message=FALSE}
library(earthdatalogin)
library(lubridate)
library(terra)
```

## Get a vector of urls to our nc files

```{r}
edl_netrc(user="eeholmes", password="C6m3U3iYTTQo")
gdal_cloud_config()   # Optimize GDAL for cloud
with_gdalcubes()      # Export settings to gdalcubes package
```

```{r}
short_name <- 'MUR-JPL-L4-GLOB-v4.1'
bbox <- c(xmin=-73.5, ymin=33.5, xmax=-43.5, ymax=43.5) 
tbox <- c("2020-01-16", "2020-12-16")

results <- edl_search(
    short_name = short_name,
    version = "4.1",
    temporal = tbox,
    bounding_box = paste(bbox,collapse=",")
)
```

`results` is a vector of urls pointing to our netCDF files in the cloud.
```{r}
results[1:3]
```
Each netCDF file is ca 670Mb.

## Crop and plot one netCDF file

Each MUR SST netCDF file is large so I do not want to download. Instead I will use `terra::rast()` to do subset the data on the server side.

```{r}
library(terra)
ras <- terra::rast(results[1], vsi=TRUE)
e <- ext(c(-75.5, -73.5,  33.5, 35.5 ))
rc <- crop(ras, e)
plot(rc[[c(1, 2)]])
```

## Crop and plot multiple netCDF files

We can send multiple urls to terra.   `vsi = TRUE` is letting it know that these are files in the cloud and to use GDAL functionality for that type of resource.

```{r}
ras_all <- terra::rast(results[c(1:4)], vsi = TRUE)
```

Crop to a small extent. The numbers are lons and lats.
```{r}
e <- ext(c(-75.5, -73.5,  33.5, 35.5 ))
rc_all <- crop(ras_all, e)
rc_sst <- rc_all["analysed_sst",]
```

Convert Kelvin to Celcius.
```{r}
rc_sst <- rc_sst - 273.15
```

Now plot. We will set the range so it is the same across plots and clean up the titles to be just day without time.
```{r}
titles <- time(rc_sst) |> lubridate::date() |> as.character()
plot(
  rc_sst, 
  range = c(16, 26),
  main = titles
)
```

## Reading in a Zarr file

https://www.r-bloggers.com/2022/09/reading-zarr-files-with-r-package-stars/


## Conclusions

Some really cool things just happened here! You connected to multiple remote-sensing files (netCDF) in the cloud and worked with them without directly downloading them.

